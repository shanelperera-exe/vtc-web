spring.application.name=backend

# MySQL database connection
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# JPA/Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

## Security: custom configuration will be provided; default login page disabled via explicit HttpSecurity configuration instead of excluding auto-config.

# Multipart upload limits (increased for category image uploads)
# Accept up to 10MB per file and per request. Adjust downward in production if not needed.
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# CORS allowed origins (comma-separated). Override in env/profiles or via .env as needed.
# Read from APP_CORS_ALLOWED_ORIGINS environment variable; default keeps localhost and a Vercel preview URL.
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:http://localhost:5173,https://vtc-web.vercel.app,https://vidaratradecenter.me,https://www.vidaratradecenter.me}

# Redis cache configuration
spring.cache.type=redis
spring.data.redis.host=${SPRING_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_REDIS_PASSWORD:}
app.cache.cart.ttl-seconds=300

# Cart calculations
app.cart.tax-rate=${APP_CART_TAX_RATE:0.07}

# JWT access & refresh token TTLs (seconds)
# Access token: 1 hour
security.jwt.access-ttl-seconds=7200
# Refresh token: 30 days
security.jwt.refresh-ttl-seconds=2592000
# Admin tokens
# Admin access token: 60 minutes
security.jwt.admin-access-ttl-seconds=3600
# Admin refresh token: 7 days
security.jwt.admin-refresh-ttl-seconds=604800

# Cookies (refresh token) - adjust for production behind HTTPS
# security.cookie.refresh.secure=true
# security.cookie.refresh.same-site=Strict


# Flyway migration settings
# Baseline existing DBs to avoid destructive resets when introducing Flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
# Optional: keep default location classpath:db/migration
# spring.flyway.locations=classpath:db/migration


# =====================
# Email (Brevo/SMTP)
# =====================
# Use SMTP via Brevo (Sendinblue)
spring.mail.host=${MAIL_HOST:smtp-relay.brevo.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8

# Optional: default from address and name
app.email.from-address=${APP_EMAIL_FROM:no-reply@vidaratradecenter.com}
app.email.from-name=${APP_EMAIL_FROM_NAME:Vidara Trade Center}
app.email.brand-name=${APP_EMAIL_BRAND_NAME:Vidara Trade Center}
app.email.brand-primary-color=${APP_EMAIL_BRAND_PRIMARY:#0e7490}
app.email.logo-url=${APP_EMAIL_LOGO_URL:https://raw.githubusercontent.com/shanelperera-exe/vidara-trade-center-assets/main/logo.png}
app.email.site-url=${APP_EMAIL_SITE_URL:https://vidaratradecenter.com}

# Brevo API (for template-based sends)
brevo.api.key=${BREVO_API_KEY:}
brevo.api.base-url=${BREVO_API_BASE_URL:https://api.brevo.com/v3}

# Email feature flags
app.email.async-enabled=${APP_EMAIL_ASYNC:true}
app.email.use-brevo-api=${APP_EMAIL_USE_BREVO_API:true}
app.email.fallback-to-smtp=${APP_EMAIL_FALLBACK_SMTP:true}

# Example template IDs in Brevo dashboard (replace with real numbers)
app.email.templates.order-confirmation-id=${APP_EMAIL_TPL_ORDER_CONFIRMATION:1}
app.email.templates.password-reset-id=${APP_EMAIL_TPL_PASSWORD_RESET:2}
app.email.templates.password-changed-id=${APP_EMAIL_TPL_PASSWORD_CHANGED:7}
app.email.templates.contact-reply-id=${APP_EMAIL_TPL_CONTACT_REPLY:3}
app.email.templates.newsletter-welcome-id=${APP_EMAIL_TPL_NEWSLETTER_WELCOME:4}
app.email.templates.order-status-update-id=${APP_EMAIL_TPL_ORDER_STATUS_UPDATE:5}
app.email.templates.account-welcome-id=${APP_EMAIL_TPL_ACCOUNT_WELCOME:6}

